prj_name;link_name;link_text;link_link;github_link;blurb;img_path
rongzi;webapp;rongzi.bhrdwj.net;https://rongzi.bhrdwj.net;https://github.com/bhrdwj/rongzi;Rongzi finds optimal network paths connecting Chinese characters by recursively querying a <a href="https://commons.wikimedia.org/wiki/Commons:Chinese_characters_decomposition">Chinese Character Decomposition</a> database. Users may find meaning in paths between adjacent characters in names or proverbs etc.</p><p>Many Chinese characters are composed of sub-components which may contribute meaning to the larger character. For instance, 好 is composed of 女 (woman) and 子 (child). These composition/decomposition relationships form a graph network.;img/paths.png
predwikt;webapp;predwikt.bhrdwj.net;https://predwikt.bhrdwj.net;https://github.com/bhrdwj/predwikt;Predwikt implements a time-series prediction (historical backtracing) of Wikipedia edits. It predicts "tomorrow's" edit count for a category of articles based on past edit counts and the calendar.<br><br><a href="https://dumps.wikimedia.org/jawiki/">Cross-section</a> and <a href="https://dumps.wikimedia.org/other/mediawiki_history/readme.html">historical</a> data for the Japanese-language Wikipedia were downloaded as .sql and .tsv files. Data prep in MariaDB was managed from a Jupyter IPython notebook via the mysql.connector API (SQLAlchemy).;img/predwikt.png
tunasoma;4min prototype demo;tunasoma.bhrdwj.net;https://tunasoma.bhrdwj.net;;Prototype: Wearable app leveraging speech-to-text for earlier toddler reading.<br><br>I conceived the original application, and wrote a specification for a simplistic proof-of-concept MVP. I developed a backend with Google's Sheets, Apps Script, and Firebase, and hired a Flutter freelancer on Upwork for the front-end and Google Cloud Speech API interface.;img/tunasoma.jpg
Early Reading;1min video;rekatwige.org;https://rekatwige.org;;Early Reading programs in Rwanda.<br>Economic Development project, not data science.;img/early_reading.jpg

